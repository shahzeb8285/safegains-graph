// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OperatorUpdated extends ethereum.Event {
  get params(): OperatorUpdated__Params {
    return new OperatorUpdated__Params(this);
  }
}

export class OperatorUpdated__Params {
  _event: OperatorUpdated;

  constructor(event: OperatorUpdated) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferralCommissionRecorded extends ethereum.Event {
  get params(): ReferralCommissionRecorded__Params {
    return new ReferralCommissionRecorded__Params(this);
  }
}

export class ReferralCommissionRecorded__Params {
  _event: ReferralCommissionRecorded;

  constructor(event: ReferralCommissionRecorded) {
    this._event = event;
  }

  get referrer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get commission(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReferralRecorded extends ethereum.Event {
  get params(): ReferralRecorded__Params {
    return new ReferralRecorded__Params(this);
  }
}

export class ReferralRecorded__Params {
  _event: ReferralRecorded;

  constructor(event: ReferralRecorded) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referrer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Referral extends ethereum.SmartContract {
  static bind(address: Address): Referral {
    return new Referral("Referral", address);
  }

  getReferrer(_user: Address): Address {
    let result = super.call("getReferrer", "getReferrer(address):(address)", [
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toAddress();
  }

  try_getReferrer(_user: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getReferrer",
      "getReferrer(address):(address)",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operators(param0: Address): boolean {
    let result = super.call("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_operators(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("operators", "operators(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referralsCount(param0: Address): BigInt {
    let result = super.call(
      "referralsCount",
      "referralsCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_referralsCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referralsCount",
      "referralsCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referrers(param0: Address): Address {
    let result = super.call("referrers", "referrers(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_referrers(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("referrers", "referrers(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalReferralCommissions(param0: Address): BigInt {
    let result = super.call(
      "totalReferralCommissions",
      "totalReferralCommissions(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_totalReferralCommissions(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalReferralCommissions",
      "totalReferralCommissions(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class RecordReferralCall extends ethereum.Call {
  get inputs(): RecordReferralCall__Inputs {
    return new RecordReferralCall__Inputs(this);
  }

  get outputs(): RecordReferralCall__Outputs {
    return new RecordReferralCall__Outputs(this);
  }
}

export class RecordReferralCall__Inputs {
  _call: RecordReferralCall;

  constructor(call: RecordReferralCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _referrer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RecordReferralCall__Outputs {
  _call: RecordReferralCall;

  constructor(call: RecordReferralCall) {
    this._call = call;
  }
}

export class RecordReferralCommissionCall extends ethereum.Call {
  get inputs(): RecordReferralCommissionCall__Inputs {
    return new RecordReferralCommissionCall__Inputs(this);
  }

  get outputs(): RecordReferralCommissionCall__Outputs {
    return new RecordReferralCommissionCall__Outputs(this);
  }
}

export class RecordReferralCommissionCall__Inputs {
  _call: RecordReferralCommissionCall;

  constructor(call: RecordReferralCommissionCall) {
    this._call = call;
  }

  get _referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _commission(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RecordReferralCommissionCall__Outputs {
  _call: RecordReferralCommissionCall;

  constructor(call: RecordReferralCommissionCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateOperatorCall extends ethereum.Call {
  get inputs(): UpdateOperatorCall__Inputs {
    return new UpdateOperatorCall__Inputs(this);
  }

  get outputs(): UpdateOperatorCall__Outputs {
    return new UpdateOperatorCall__Outputs(this);
  }
}

export class UpdateOperatorCall__Inputs {
  _call: UpdateOperatorCall;

  constructor(call: UpdateOperatorCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateOperatorCall__Outputs {
  _call: UpdateOperatorCall;

  constructor(call: UpdateOperatorCall) {
    this._call = call;
  }
}
